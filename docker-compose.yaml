version: '3.8'

services:
  # Postgres Database
  postgres-db:
    image: postgres:15
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    networks:
      - my-network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: docker/dockerfile.backend
    ports:
      - "3001:3001"
    networks:
      - my-network
    depends_on:
      postgres-db:
        condition: service_healthy
    environment:
      DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres-db:5432/${POSTGRES_DB}"
    command: >
      sh -c "npx prisma migrate deploy --schema=../../packages/db/prisma/schema.prisma &&
             bun run dist/index.js"

  # WebSocket Service
  ws:
    build:
      context: .
      dockerfile: docker/dockerfile.ws
    ports:
      - "8081:8181"
    networks:
      - my-network
    depends_on:
      - backend

  # Frontend Service
  frontend:
    build:
      context: .
      dockerfile: docker/dockerfile.frontend
    ports:
      - "3000:3000"
    networks:
      - my-network
    depends_on:
      - backend

networks:
  my-network:
    driver: bridge

volumes:
  postgres_data:
